{"ast":null,"code":"import api from './api';\nexport const issueService = {\n  // Get all issues\n  getIssues: async (params = {}) => {\n    const response = await api.get('/issues', {\n      params\n    });\n    return response.data;\n  },\n  // Get single issue\n  getIssue: async id => {\n    const response = await api.get(`/issues/${id}`);\n    return response.data;\n  },\n  // Create new issue\n  createIssue: async issueData => {\n    const response = await api.post('/issues', issueData);\n    return response.data;\n  },\n  // Update issue\n  updateIssue: async (id, updateData) => {\n    const response = await api.put(`/issues/${id}`, updateData);\n    return response.data;\n  },\n  // Delete issue\n  deleteIssue: async id => {\n    const response = await api.delete(`/issues/${id}`);\n    return response.data;\n  },\n  // Vote on issue\n  voteIssue: async id => {\n    const response = await api.post(`/issues/${id}/vote`);\n    return response.data;\n  },\n  // Add comment\n  addComment: async (id, comment) => {\n    const response = await api.post(`/issues/${id}/comments`, {\n      text: comment\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","issueService","getIssues","params","response","get","data","getIssue","id","createIssue","issueData","post","updateIssue","updateData","put","deleteIssue","delete","voteIssue","addComment","comment","text"],"sources":["C:/Users/Aryan Pratap Singh/OneDrive/Desktop/civic-issue-reporter/src/services/issueService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const issueService = {\r\n  // Get all issues\r\n  getIssues: async (params = {}) => {\r\n    const response = await api.get('/issues', { params });\r\n    return response.data;\r\n  },\r\n\r\n  // Get single issue\r\n  getIssue: async (id) => {\r\n    const response = await api.get(`/issues/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new issue\r\n  createIssue: async (issueData) => {\r\n    const response = await api.post('/issues', issueData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update issue\r\n  updateIssue: async (id, updateData) => {\r\n    const response = await api.put(`/issues/${id}`, updateData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete issue\r\n  deleteIssue: async (id) => {\r\n    const response = await api.delete(`/issues/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Vote on issue\r\n  voteIssue: async (id) => {\r\n    const response = await api.post(`/issues/${id}/vote`);\r\n    return response.data;\r\n  },\r\n\r\n  // Add comment\r\n  addComment: async (id, comment) => {\r\n    const response = await api.post(`/issues/${id}/comments`, { text: comment });\r\n    return response.data;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,YAAY,GAAG;EAC1B;EACAC,SAAS,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IAChC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,SAAS,EAAE;MAAEF;IAAO,CAAC,CAAC;IACrD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,QAAQ,EAAE,MAAOC,EAAE,IAAK;IACtB,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,WAAWG,EAAE,EAAE,CAAC;IAC/C,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,WAAW,EAAE,MAAOC,SAAS,IAAK;IAChC,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,SAAS,EAAED,SAAS,CAAC;IACrD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,WAAW,EAAE,MAAAA,CAAOJ,EAAE,EAAEK,UAAU,KAAK;IACrC,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,GAAG,CAAC,WAAWN,EAAE,EAAE,EAAEK,UAAU,CAAC;IAC3D,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAS,WAAW,EAAE,MAAOP,EAAE,IAAK;IACzB,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACgB,MAAM,CAAC,WAAWR,EAAE,EAAE,CAAC;IAClD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAW,SAAS,EAAE,MAAOT,EAAE,IAAK;IACvB,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,WAAWH,EAAE,OAAO,CAAC;IACrD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAY,UAAU,EAAE,MAAAA,CAAOV,EAAE,EAAEW,OAAO,KAAK;IACjC,MAAMf,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,WAAWH,EAAE,WAAW,EAAE;MAAEY,IAAI,EAAED;IAAQ,CAAC,CAAC;IAC5E,OAAOf,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}